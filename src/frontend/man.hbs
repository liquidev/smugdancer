<!DOCTYPE html>

<html lang="en">

<head>
    <title>smugdancer(1)</title>

    {{{include_css}}}

    <style>
        body {
            margin: 2em auto;
            padding: 2em;
            max-width: 75%;

            background-color: var(--box-background);
            border-radius: var(--box-roundness);

            font-size: 16px;
        }

        h1 {
            text-align: center;
            margin: 1em 0;
        }

        h2 {
            margin-top: 2em;
        }

    </style>

    <meta property="og:title" content="man smugdancer.1">
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://{{root}}/man">
    <meta property="og:description" content="API documentation for Smug dance as a Service">
</head>

<body>
    <h1>smugdancer(1)</h1>

    <h2 id="name">NAME</h2>
    <p>smugdancer - generate a smug dancin' GIF synchronized to a specific tempo (in BPM.)</p>

    <h2 id="synopsis">SYNOPSIS</h2>
    <p>
    <pre>GET {{root}}/:bpm.gif</pre>
    <pre>GET {{root}}/:bpm</pre>
    where <code>:bpm</code> is a floating point number.
    </p>

    <h2 id="description">DESCRIPTION</h2>
    <p>
        Upon valid use, the <code>GET /:bpm.gif</code> and <code>GET /:bpm</code> endpoints will return a GIF of the
        smug dance, synchronized to the provided tempo. Generating the GIF might take a while, so be patient.
    </p>
    <p>
        The <code>.gif</code> suffix version is provided for apps like Discord, which will not play the GIF unless the
        URL contains the <code>.gif</code> extension.
    </p>
    <p>
        The tempo must be within the range between {{minimum_bpm}} and 18000 BPM. Values falling outside the range will
        result in 400 Bad Request.
    </p>
    <p>
        If an error occurs, a JSON response in the form of an object <code>{"error":"message"}</code> will be returned.
        The HTTP status code will be 400 Bad Request if it's user error, or 500 Internal Server Error if something goes
        wrong internally (if it does, please let me know.) <strong>Do note that these error messages are provided for
            display in user interfaces only and their values should not be relied upon.</strong>
    </p>

    <h2 id="rate-limiting">RATE LIMITING</h2>
    <p>
        To prevent abuse, the server will reject your requests if you execute them too often. The exact condition is
        that a single IP may not issue a new requests before it receives a response from the server. This boils down to
        two cases:
    </p>
    <ul>
        <li>The server needs to render your BPM because it hasn't been used before (slow),</li>
        <li>The server sends you a cached GIF of your requested BPM (fast).</li>
    </ul>
    <p>
        The exact rendering speed may vary depending on conditions such as congestion. If many IPs are requesting
        BPMs that haven't been cached yet, it may take a while for the server to process them all, so be patient.
    </p>

    <h2 id="examples">EXAMPLES</h2>
    <p>
        To obtain a GIF of Hat Kid dancing at <em>roughly</em> 128 BPM (the tempo of <a
            href="https://www.youtube.com/watch?v=SHvhps47Lmc">Peace and Tranquility</a>):
    <pre>https://{{root}}/128</pre>
    </p>

    <h2 id="limitations">LIMITATIONS</h2>
    <ul>
        <li>
            <p>
                Due to limitations imposed by the GIF file format, as well as historical baggage of modern day web
                browsers, animations can only be played out at a framerate of up to 50 fps. Because all frames take 20
                milliseconds, it is impossible to perfectly synchronize with certain tempo values. For instance, 128 BPM
                requires that the animation takes 281.25 frames, which is impossible. Thus, the actual tempo the GIF is
                synchronized to is slightly faster (~128.1138790 BPM).
            </p>
            <p>
                This <em>could</em> be somewhat alleviated by repeating the animation a specific number of times to
                round the frame count up to a whole number, but again, due to limitations of the GIF file format, the
                file size would increase drastically. In case of 128 BPM, the animation would need to be repeated four
                times to round the frame count up to the nearest integer, which would quadruple the file size.
            </p>
        </li>
        <li>
            <p>
                There's no way to swap out hats, give Hat Kid double sunglasses, or anything of that sort,
                unfortunately. Each variation would need a separate render and I don't have a computer that's powerful
                enough to render Hat Kid, Hat Kid with sunglasses, Hat Kid with double sunglasses, Hat Kid with
                the Sprint Hat, Hat Kid with the Sprint Hat with sunglasses, â€¦ and so on. Maybe someday raytracers will
                become fast enough to do this on demand.
            </p>
        </li>
    </ul>

    <h2 id="credits">CREDITS</h2>
    <p>
        Website, web server, and render of Hat Kid is &copy; liquidev, 2022. Note that I do not own the character
        design, model, nor animation.
    </p>
    <p>
        A Hat in Time is &copy; Gears for Breakfast. This website is a fan project and is not affiliated with GfB.
        <sub>Please don't sue me :(</sub>
    </p>
    <p>
        If anyone from GfB sees this and wants me to take this website down, please contact me at the email address
        that's listed on my GitHub profile.
    </p>

    <h2 id="source">SOURCE?</h2>
    <p>
        It's on <a href="https://github.com/liquidev/smugdancer">GitHub</a>!
    </p>
</body>

</html>
