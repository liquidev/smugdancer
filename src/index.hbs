<!DOCTYPE html>

<html>

<head>
   <title>Smug dance as a Service (SaaS)</title>
</head>

<body>
   <h1><strong>S</strong>mug dance <strong>a</strong>s <strong>a</strong> <strong>S</strong>ervice</h1>

   <h2>NAME</h2>
   <p>Smug dance as a Service - generate a smug dancin' GIF synchronized to a specific tempo (in BPM.)</p>

   <h2>SYNOPSIS</h2>
   <p>
   <pre>GET {{root}}/:bpm</pre>
   where <code>:bpm</code> is a floating point number
   </p>

   <h2>DESCRIPTION</h2>
   <p>
      Upon valid use, the <code>GET /:bpm</code> endpoint will return a GIF of the smug dance, synchronized to the
      provided tempo. Generating the GIF might take a while, so be patient.
   </p>
   <p>
      The minimum supported tempo is {{minimum_bpm}} BPM. Lower values will work, but the resulting GIF might (will,
      even!) stutter.
      Besides, what kind of person would want to dance to music that's slower than 60 BPM?
   </p>
   <p>
      If the BPM cannot be parsed into a floating point number (eg. contains letters), 400 Bad Request and an error
      message will be returned. If the BPM is out of usable range (ie. would take way too long to process, or would be a
      still picture), 400 is returned with a JSON error code like <code>{"message":"error message goes here"}</code>.
   </p>

   <h2>EXAMPLES</h2>
   <p>
      To obtain a GIF of Hat Kid dancing at <em>roughly</em> 128 BPM (the tempo of <a
         href="https://www.youtube.com/watch?v=SHvhps47Lmc">Peace and Tranquility</a>):
   <pre>https://{{root}}/128</pre>
   </p>

   <h2>LIMITATIONS</h2>
   <ul>
      <li>
         <p>
            Due to limitations imposed by the GIF file format, as well as historical baggage of modern day web browsers,
            animations can only be played out at a framerate of up to 50 fps. Because all frames take 20 milliseconds,
            it is impossible to perfectly synchronize with certain tempo values. For instance, 128 BPM requires that the
            animation takes 281.25 frames, which is impossible. Thus, the actual tempo the GIF is synchronized to is
            slightly
            faster (~128.1138790 BPM).
         </p>
         <p>
            This <em>could</em> be somewhat alleviated by repeating the animation a specific number of times to round
            the
            frame count up to a whole number, but again, due to limitations of the GIF file format, the file size would
            increase drastically. In case of 128 BPM, the animation would need to be repeated four times to round the
            frame
            count up to the nearest integer, which would quadruple the file size.
         </p>
      </li>
      <li>
         <p>
            600 frames is not enough to provide a neat'n'smooth animation across all framerates, so you may see slight
            stuttering sometimes. I might add more frames to the source render someday, but I <em>really</em> don't feel
            like doing it right now. Rendering with Cycles on the CPU is really slow.
         </p>
      </li>
      <li>
         <p>
            There's no way to swap out hats, give Hat Kid double sunglasses, or anything of that sort, unfortunately.
            The source render weighs in at about 400 MiB and I really do not have the bandwidth to upload much more in a
            reasonable amount of time. Also, see previous bullet point.
         </p>
      </li>
   </ul>

   <h2>CREDITS</h2>
   <p>
      Website, web server, and render of Hat Kid is &copy; liquidev, 2022. Note that I do not own the character design,
      model, nor animation.
   </p>
   <p>
      A Hat in Time is &copy; Gears for Breakfast. This website is a fan project and is not affiliated with GfB.
      <sub>Please don't sue me :(</sub>
   </p>
   <p>
      If anyone from GfB sees this and wants me to take this website down, please contact me at the email address that's
      listed on my GitHub profile.
   </p>

   <h2>SOURCE?</h2>
   <p>
      I may publish the source code to this web server someday, but what's the web server useful for without the smug
      dance? I can't just stuff over 400 MiB of PNGs into a Git repository!
   </p>
</body>

</html>
